#+title: Juego tipo escape room virtual

#+AUTHOR:      츼lvaro Gonz치lez Sotillo
#+EMAIL:       alvarogonzalezsotillo@gmail.com
#+DATE:        2020-04-13
#+URI:         /blog/juego-escape-room-virtual

#+options: num:nil index:nil

#+TAGS: escape room,orgmode
#+DESCRIPTION: Un juego simple tipo escape room implementado con baja tecnolog칤a

Durante la cuarentena del COVID-19 ha habido tiempo para casi todo. Despu칠s de jugar a un par de juegos /escape room virtuales/ ([[https://theparadoxroom.com/digital/game/apocalipsis-higienico/][paradoxroom]], [[https://www.escaperoomdigital.com/laextorsiondelhacker][escaperoomdigital]]) me ha parecido interesante inventarme el mio propio.


#+attr_html: :style text-align:center;font-size:150%;color:blue
[[file:inicio/index.org][El secreto de Despair Corp]]


El c칩digo fuente est치 oculto, para que no se vean las soluciones a los acertijos.

* Opciones para la implementaci칩n del juego
Solo dispongo de alojamiento web est치tico ([[https://pages.github.com/][Github Pages]] y similar), as칤 que hay que implementar la l칩gica en el lado cliente. Para que cada p치gina no tenga la soluci칩n en el c칩digo html, hay dos soluciones
- *Ofuscar la respuesta correcta*: La respuesta puede estar incluida en la p치gina, pero no en texto legible.
  - Usando un sistema reversible como [[https://es.wikipedia.org/wiki/Base64][base64]] se oculta de forma superficial. No costar칤a demasiado saber la respuesta.
  - Se puede guardar su [[https://es.wikipedia.org/wiki/Funci%C3%B3n_hash_criptogr%C3%A1fica][hash]], de forma que no se pueda saber la respuesta a partir del hash.
- *Preguntar al servidor si la respuesta es correcta*: Aunque sea un hosting est치tico, el servidor responde con un c칩digo [[https://es.wikipedia.org/wiki/Anexo:C%C3%B3digos_de_estado_HTTP#2xx:_Peticiones_correctas][HTTP 200]] si el recurso existe, u otro c칩digo si no existe.

* Opci칩n utilizada
Cuando el jugador introduce la respuesta, la /normalizo/ pas치ndola a may칰sculas y quitando caracteres /sobrantes/, como espacio, gui칩n, acentos...

#+begin_src javascript
    function normalizaRespuesta(str){
        let sustituciones = {
            " " : "",
            "-" : "",
            "," : "",
            "." : "",
            "츼" : "A",
            "칄" : "E",
            "칈" : "I",
            "칍" : "O",
            "칔" : "U",
            "칖" : "U",
            "칌" : "N"
        };

        letras = Array.from(str.toUpperCase());
        let sanitized = letras.map( 
          c => typeof sustituciones[c] != "undefined" ? 
               sustituciones[c] : 
               c ).join("");
        return sanitized;
    }
#+end_src

Cada p치gina web de la aventura est치 en un directorio que tiene por nombre la soluci칩n del paso anterior. Por ejemplo, si el paso 1 tiene como respuesta correcta /El cantar del m칤o Cid/, esta respuesta se normaliza a =ELCANTARDELMIOCID= y el siguiente paso se almacena en la URL ~../ELCANTARDELMIOCID/index.hml~.

Utilizo el siguiente /script/ para saber si un recurso existe:

#+begin_src javascript
    function existeURL(url){
        let request = new XMLHttpRequest();  
        request.open('GET', url, false);
        request.send(null);
        let found = request.status != 404;
        return found;
    }
#+end_src

De esta forma, se detecta una respuesta correcta porque existe una p치gina en el servidor con ese nombre, y se salta a esa p치gina. M치s /serverless/ no puede ser 游땙

* Generaci칩n de p치ginas
Cualquier generador de sitios est치ticos valdr칤a para implementar el juego. Yo he elegido [[https://orgmode.org/manual/Publishing.html][org-publish]], para no salir de [[https://www.gnu.org/software/emacs/][emacs]]. 

La configuraci칩n se basa en dos proyectos: uno que transforma los ficheros =org= en =html=, y otro que copia el resto de recursos (=js=, =css=, =zip=...)

#+begin_src emacs-lisp
(setq org-publish-project-alist
      '(
        ("aventura-org"
         :base-directory "/home/alvaro/github/aventura/org/"
         :base-extension "org"
         :publishing-directory "/home/alvaro/github/aventura/public/"
         :recursive t
         :publishing-function org-html-publish-to-html
         :headline-levels 4             ; Just the default for this project.
         :auto-preamble t
         )

        ("aventura-static"
         :base-directory "/home/alvaro/github/aventura/org/"
         :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf\\|html\\|svg\\|zip\\|ttf"
         :publishing-directory "/home/alvaro/github/aventura/public/"
         :recursive t
         :publishing-function org-publish-attachment
         )

        ("aventura"
         :components ("aventura-org" "aventura-static")
         )
        
        ))
#+end_src

Para generar las p치ginas utilizo esta funci칩n interactiva:

#+begin_src emacs-lisp
(defun publicar-aventura()
  (interactive)
  (delete-directory "/home/alvaro/github/aventura/public/" t)
  (org-publish-remove-all-timestamps)
  (org-publish-project "aventura" t))
#+end_src
