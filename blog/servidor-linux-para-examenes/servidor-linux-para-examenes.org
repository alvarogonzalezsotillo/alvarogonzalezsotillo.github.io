#+TITLE:       Servidor linux para ex치menes
#+AUTHOR:      츼lvaro Gonz치lez Sotillo
#+EMAIL:       alvarogonzalezsotillo@gmail.com
#+DATE:        2018-05-30
#+URI:         /blog/servidor-linux-para-examenes
#+KEYWORDS:    examenes, linux
#+TAGS:        linux, lamp, oracle
#+LANGUAGE:    es
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: Al encargar trabajos o examinar a los alumnos, utilizo un servidor virtual para que trabajen en un entorno controlado.

* El problema
A la hora de realizar un trabajo o examen pr치ctico sobre un ordenador, los profesores tenemos varias alternativas:
1. Los alumnos realizan el examen sobre su propio ordenador o m치quina virtual. Despu칠s, cada alumno muestra el resultado al profesor. Esta soluci칩n se vuelve dif칤cil si hay muchos alumnos, porque deben ir esperando su turno para presentar el resultado al profesor.
2. Como la opci칩n 1, pero el profesor recoge las m치quinas virtuales y las estudia posteriormente. En este caso, el problema es la copia de las m치quinas virtuales, cada una con varios gigabytes, en un disco duro que hay que ir acoplando a cada ordenador de los alumnos.
3. Abandonar la idea de /pr치ctico/, y realizar el examen sobre papel 游땸

Sin embargo, hay ex치menes en los que el alumno no necesita ser administrador de la m치quina. En estos casos, el profesor puede montar un /hosting/ casero y dejar que los alumnos realicen el examen en su propio ordenador o m치quina virtual. 

A continuaci칩n, describir칠 qu칠 pasos sigo para crear un entorno Linux para mis alumnos. Este entorno lo he adaptado para ex치menes de bases de datos (Oracle y MySQL), y ex치menes LAMP.

* Entorno Linux

Cada alumno tendr치 su propia contrase침a. Generar las contrase침as aleatoriamente no es una buena idea, puesto que dificulta su recuperaci칩n en caso de p칠rdida. Es mejor que la contrase침a dependa del nombre del usuario, por ejemplo los primeros caracteres del hash del usuario. 

Mi soluci칩n es utilizar el c칩digo ASCII de varios caracteres del nombre del usuario: para los alumnos es inicialmente algo imposible de descifrar, y cuando preguntan puedo contar cosas como el sistema de numeraci칩n binaria, c칩digo ASCII, cadenas de caracteres, criptoan치lisis...


#+caption: Funci칩n que calcula una contrase침a a partir del nombre del usuario =MARIA= (=776582=)
#+BEGIN_SRC sh
password_para_alumno(){
    local USER=$1
    local uno=${USER:0:1}
    local dos=${USER:1:1}
    local tres=${USER:2:1}

    LC_CTYPE=C printf '%d' "'$uno'" "'$dos'" "'$tres'"
}

echo La contrase침a para MARIA ser칤a $(password_para_alumno MARIA)
#+END_SRC

Los usuarios se crean la contrase침a especificada por la funci칩n anterior. El directorio del alumno no es accesible por otros alumnos, y el alumno no puede cambiar los permisos de su /home/ para dejarse copiar.
#+caption: Creaci칩n de un usuario 
#+BEGIN_SRC sh
crear_usuario_linux()
{
    local USER=$1
    local PASS=$(password_para_alumno $USER)

    
    sudo useradd $USER -m -s /bin/bash
    echo "$USER:$PASS" | sudo chpasswd

    sudo chown root:$USER /home/$USER
    sudo chmod 770 /home/$USER
}
#+END_SRC

Tambi칠n elimino los canales de comunicaci칩n entre alumnos m치s comunes: mensajer칤a, conexiones TCP... Hay demasiadas formas como para deshabilitarlas todas. De las que no se eliminan, la m치s evidente son los ficheros temporales en =/tmp=.
#+caption: Eliminaci칩n de algunos canales de comunicaci칩n entre alumnos
#+BEGIN_SRC sh
deshabilita_comunicacion(){
    sudo "chmod 500 $(which wall) $(which mail) $(which write) $(which nc)"
}
#+END_SRC

En el momento del examen, es necesario que los alumnos conozcan su contrase침a de una forma m치s o menos confidencial. Para eso utilizo una [[https://orgmode.org/manual/Built_002din-table-editor.html#Built_002din-table-editor][tabla de org-mode]], que imprimo y recorto cada fila, para repartir a cada alumno.

#+caption: Creaci칩n de un fichero con todos los usuarios y contrase침as 
#+BEGIN_SRC sh
lista_usuarios(){
    rm usuarios_linux.org
    local USUARIOS="$*"
    
    for USER in $USUARIOS
    do
        local PASS=$(password_para_alumno $USER)
        printf '| Usuario | %s | Password | %s | \n' $USER $PASS >> usuarios_linux.org
    done
}
#+END_SRC

Con todas estas funciones, ya solo queda definir la lista de alumnos e invocarlas por cada alumno.

#+caption: Todas las anteriores funciones en acci칩n
#+BEGIN_SRC sh
# LISTA DE USUARIOS: GENERALMENTE, USO LOS APELLIDOS DE LOS ALUMNOS
usuarios="alumno1 alumno2 alumno3"

deshabilita_comunicacion

for usuario in $usuarios
do
    crear_usuario_linux $usuario
done

lista_usuarios $usuarios
#+END_SRC


* Oracle

Utilizo la versi칩n [[http://www.oracle.com/technetwork/database/database-technologies/express-edition/overview/index.html][Oracle XE]], para evitar problemas de licencia, y porque es bastante simple de instalar a partir de paquetes RPM en un Centos/Fedora.

En los ex치menes basados en Oracle es necesario crear un usuario para cada alumno. Por simplicidad, el mismo usuario y contrase침a de Linux se reutilizan para la base de datos.

Al comienzo defino las variables =ORACLE_HOME= y =ORACLE_SID=, que son necesarias para que funcione correctamente el cliente de Oracle =sqlplus=. Para no dejar la contrase침a del administrador escrita en el /script/, utilizo la variable de entorno =SYSPASS=.

#+caption: Variables necesarias para el funcionamiento de =sqlplus= de   *[[http://www.oracle.com/technetwork/database/database-technologies/express-edition/overview/index.html][Oracle XE]]*.
#+begin_src sh
export ORACLE_HOME=/u01/app/oracle/product/11.2.0/xe
export ORACLE_SID=XE
export NLS_LANG=`$ORACLE_HOME/bin/nls_lang.sh`
export PATH=$ORACLE_HOME/bin:$PATH


if [ -z "$SYSPASS" ]
then
    echo La variable SYSPASS debe tener la contrase침a SYS de la base de datos
    exit
fi
#+end_src

Para cada alumno se crea un usuario con permisos b치sicos (crear tablas, 칤ndices, vistas...). Despu칠s se carga un /script/ de SQL inicial para la creaci칩n de tablas, que depende de cada examen.

#+caption: Creaci칩n de un usuario de *Oracle*, con una carga inicial de tablas y datos (=tablas-iniciales.sql=)
#+begin_src sh
crear_usuario_oracle(){
    local user=$1
    local pass=$(password_para_alumno $user)
    sqlplus sys/$SYSPASS as sysdba <<EOF
    drop user $user cascade;
    create user $user identified by $pass;
    grant connect,resource,create view to $user;
    commit;
EOF

    sqlplus $user/$pass <<EOF
    @tablas-iniciales.sql
EOF
}
#+end_src

* LAMP

Para los ex치menes [[https://es.wikipedia.org/wiki/LAMP][LAMP]] se necesita una base de datos y un sitio web por cada alumno.


#+caption: Creaci칩n de la base de datos MySQL para un alumno
#+BEGIN_SRC sh
crea_base_de_datos()
{
  local USER=$1
  local PASS=$(password_para_alumno $USER)

  mysql --user=root --password=$SYSPASS <<EOF
    DROP DATABASE $USER;
    CREATE DATABASE IF NOT EXISTS $USER;
    GRANT ALL ON $USER.* TO '$USER' IDENTIFIED BY '$PASS';
    FLUSH PRIVILEGES;
EOF
}

#+END_SRC




Apache2 dispone de la directiva [[http://httpd.apache.org/docs/2.4/mod/mod_userdir.html#UserDir][UserDir]] para crear un sitio web para cada usuario. De todas formas, para tener un control m치s fino sobre cada opci칩n y directorio de alumno, he decidido crear un /site/ por alumno.

La siguiente funci칩n crea un /site/ para un alumno en entorno Debian/Apache2.

#+caption: Creaci칩n de un /site/ para un alumno en =$HOME/public_html=
#+BEGIN_SRC sh
crea_sitio_web()
{
  local USER=$1

  if [ ! -z "$USER" ]
    then

    local APACHE=www-data
    local DOCUMENTROOT=/home/$USER/public_html
    local SITE=/etc/apache2/sites-available/alumno_$USER

    mkdir -p /home/$USER
    chown -R $USER:$USER /home/$USER

    mkdir -p $DOCUMENTROOT
    echo "Sitio de $USER, en el directorio $DOCUMENTROOT, con AllowOverride All" >  $DOCUMENTROOT/index.html

    # AJUSTE DE PERMISOS: $HOME sigue siendo privado para otros alumnos, pero 
    # $APACHE puede accceder a $DOCUMENTROOT 
    setfacl -R -m u:$APACHE:rxw /home/$USER
    chown -R $USER:$APACHE $DOCUMENTROOT
    chmod -R 770 $DOCUMENTROOT
    chmod +s $DOCUMENTROOT

    cat <<EOF > $SITE
    <Directory "$DOCUMENTROOT"> 
      AllowOverride All 
    </Directory>
    alias /$USER $DOCUMENTROOT 
EOF
  fi
}

#+END_SRC

Para evitar cientos de preguntas al inicio del examen dejo una p치gina inicial de Apache donde explico:
- Que pueden conectarse mediante [[https://es.wikipedia.org/wiki/Secure_Shell][ssh]] y [[https://es.wikipedia.org/wiki/SSH_File_Transfer_Protocol][sftp]]
- Que tienen disponible [[https://www.phpmyadmin.net/][phpMyAdmin]]
- Que su usuario y contrase침a es la misma en todos los casos

#+caption: P치gina de bienvenida al /hosting/ de ex치menes
#+BEGIN_SRC sh
  crea_pagina_inicio()
  {
      local USERS="$1"
      local IPADDRESS=$(hostname -I)
      local IPADDRESS="${IPADDRESS#"${IPADDRESS%%[![:space:]]*}"}"
      local IPADDRESS="${IPADDRESS%"${IPADDRESS##*[![:space:]]}"}"
    
      local HOSTNAME=$(hostname).local
      #local HOSTNAME=$IPADDRESS

      local INDEXHTML=/var/www/html/index.html
      cat <<EOF > $INDEXHTML 
      <h1>Aplicaciones Web. Examen 1 evaluacion 3</h1>
      <p>Conexion con ssh a la IP:<b>$IPADDRESS</b>  ($HOSTNAME)</p>
      <table border=1>
  EOF
    
      for i in $USERS
      do
          cat <<EOF >> $INDEXHTML
            <tr>
              <td>
                <a href=$i/phpBB3>$i</a>
              </td>
              <td>Misma contrase&ntilde;a inicial</td>
              <td>
                <a href=sftp://$i@$HOSTNAME/home/$i>SFTP</a>
              </td>
              <td>
                <a href=phpMyAdmin>phpMyAdmin</a>
              </td>
            </tr>
  EOF
      done

      echo "</table>" >> $INDEXHTML
  }

#+END_SRC


En algunos ex치menes, los alumnos no empiezan con un LAMP vac칤o, sino que instalo previamente un [[https://www.joomla.org/][Joomla]] o [[https://wordpress.org/][Wordpress]] que tienen que modificar. Para ello, creo un usurio plantilla donde instalo lo necesario, y despu칠s copio la base de datos y los ficheros a cada alumno

#+caption: Copia de una base de datos *plantilla* sobre la base de datos de un alumno
#+BEGIN_SRC sh
copia_base_de_datos()
{
  local DBEXISTENTE=$1
  local DBACREAR=$2
  yes | mysqladmin --user=root --password=$SYSPASS drop $DBACREAR
  mysqladmin --user=root --password=$SYSPASS create $DBACREAR
  mysqldump --user=root --password=$ROOTPASS $DBEXISTENTE | mysql --user=root --password=$ROOTPASS $DBACREAR 
}

#+END_SRC

#+CAPTION: Copia de los ficheros de un sitio web
#+BEGIN_SRC sh
copia_ficheros_sitio_web()
{
  local PLANTILLA=$1
  local USER=$2
  local APACHE=www-data
  local PLANTILLADOCUMENTROOT=/home/$PLANTILLA/public_html
  local DOCUMENTROOT=/home/$USER/public_html
  sudo cp -R $PLANTILLADOCUMENTROOT /home/$USER/
  sudo chown -R $USER:$APACHE $DOCUMENTROOT
  sudo chmod -R 770 $DOCUMENTROOT
  sudo chmod +s $DOCUMENTROOT
}

#+END_SRC


Dependiendo de la aplicaci칩n web copiada, puede ser necesario realizar m치s ajustes. Por ejemplo, si se clona un Joomla, en su fichero de configuraci칩n hay que cambiar las apariciones de /plantilla/ por el nombre del usuario del alumno. Adem치s, es necesario cambiar el usuario administrador de Joomla en la base de datos:

#+CAPTION: Ajuste de una base de datos y ficheros de configuraci칩n para que funcionen en otro sitio web
#+BEGIN_SRC sh
copia_joomla()
{
  local PLANTILLA=$1
  local USER=$2
  local DOCUMENTROOT=/home/$USER/public_html

  copia_base_de_datos $PLANTILLA $USER
  copia_ficheros_sitio_web $PLANTILLA $USER
  sed -i -- "s/$PLANTILLA/$USER/g" $DOCUMENTROOT/configuration.php

  rm $DOCUMENTROOT/index.html

  mysql --user=$USER --password=$USER -e "use $USER; update isvfo_users set username='$USER' where username='plantilla';"
}
#+END_src


Una vez se tienen todas estas funciones, basta con iterar sobre los alumnos, y acabar habilitando todos los sitios web nuevos (uso =a2ensite= de la distribuci칩n de Debian)

#+caption: Uso conjunto de las funciones anteriores para montar un examen de Joomla
#+BEGIN_SRC sh
for user in $USERS
do
  echo ________________________________________ NOMBRE DE USUARIO: $user
  crea_usuario $user
  crea_sitio_web $user
  crea_base_de_datos $user
  copia_joomla plantilla $user
done

sudo a2ensite 'alumno*'
sudo service apache2 restart
#+END_SRC
